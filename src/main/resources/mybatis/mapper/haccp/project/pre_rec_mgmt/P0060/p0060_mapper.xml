<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daedan.mes.haccp.project.pre_rec_mgmt.P0060">
    <select id="gridPagingCnt" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 그리드 페이징 카운트] pre_rec_mgmt.p0060.gridPagingCnt */
        SELECT COUNT(*) AS CNT
        FROM SHC_REC_PRE_LIST
        WHERE 1=1
          AND L_CODE = #{recLargeCode}
          AND CREATE_DT BETWEEN STR_TO_DATE(#{thisYearFirst}, '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{thisYearLast}, " 23:59:59"), '%Y-%m-%d %H:%i:%s')
    </select>

    <select id="gridPaging" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 그리드 페이징] pre_rec_mgmt.p0060.gridPaging */
        SELECT
            REC_NO, L_CODE_NM, REG_DATE, RMK, FILE_KEY, CREATE_DT, CREATE_ID,
            (SELECT B.CODE_NM FROM SHC_COMM_CODE B WHERE SUBSTR(B.CODE_KIND,1,3)='APP' AND B.CODE = A.REVW_STATUS) AS REVW_STATUS,
            (SELECT B.CODE_NM FROM SHC_COMM_CODE B WHERE SUBSTR(B.CODE_KIND,1,3)='APP' AND B.CODE = A.APPR_STATUS) AS APPR_STATUS
        FROM (
                 SELECT REC_NO, (SELECT L_CODE_NM FROM SHC_REC_MAIN WHERE L_CODE = #{recLargeCode} ) AS L_CODE_NM, REG_DATE, RMK, FILE_KEY, CREATE_DT, CREATE_ID,
                        (SELECT B.REVW_STATUS FROM SHC_APPR_LIST B WHERE B.REC_NO = A.REC_NO) AS REVW_STATUS,
                        (SELECT B.APPR_STATUS FROM SHC_APPR_LIST B WHERE B.REC_NO = A.REC_NO) AS APPR_STATUS
                 FROM SHC_REC_PRE_LIST A
                 WHERE 1=1
                   AND L_CODE = #{recLargeCode}
                   AND CREATE_DT BETWEEN STR_TO_DATE(#{thisYearFirst}, '%Y-%m-%d %H:%i:%s') AND STR_TO_DATE(CONCAT(#{thisYearLast}, " 23:59:59"), '%Y-%m-%d %H:%i:%s')
             ) A
        ORDER BY A.CREATE_DT DESC
            LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="selectTrap01KindList" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 비래해충 종류] pre_rec_mgmt.p0060.selectTrap01KindList */
        SELECT CODE_KIND, CODE_KIND_NM, CODE, CODE_NM, CODE_DESC, COUNT(*) OVER () AS CNT
        FROM SHC_COMM_CODE
        WHERE 1=1
          AND CODE_KIND = 'CLMDFY'
    </select>

    <select id="selectTrap02KindList" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 보행해충 종류] pre_rec_mgmt.p0060.selectTrap02KindList */
        SELECT CODE_KIND, CODE_KIND_NM, CODE, CODE_NM, CODE_DESC, COUNT(*) OVER () AS CNT
        FROM SHC_COMM_CODE
        WHERE 1=1
          AND CODE_KIND = 'CLMDWK'
    </select>

    <select id="selectTrap03KindList" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 설치류 종류] pre_rec_mgmt.p0060.selectTrap03KindList */
        SELECT CODE_KIND, CODE_KIND_NM, CODE, CODE_NM, CODE_DESC, COUNT(*) OVER () AS CNT
        FROM SHC_COMM_CODE
        WHERE 1=1
          AND CODE_KIND = 'CLMDRT'
    </select>

    <select id="selectTrap01List" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 비래해충 초기 리스트] pre_rec_mgmt.p0060.selectTrap01List */
        SELECT
            L_CODE,
            SEQ,
            ORD_SEQ,
            ROW_NUMBER () OVER (
				ORDER BY ORD_SEQ ASC
			) ROW_SEQ,
                M_CODE_KIND,
            M_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS M_CODE_NM,
            S_CODE_KIND,
            S_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS S_CODE_NM,
            D_CODE_KIND,
            D_CODE,
            D_CODE_NM,
            USE_YN,
            0 AS FLY_SUM
        FROM SHC_REC_PRE
        WHERE 1=1
          AND USE_YN = 'Y'
          AND L_CODE = 'P0060'
          AND M_CODE_KIND =  'TRAP01'
        ORDER BY ORD_SEQ ASC
    </select>

    <select id="selectTrap02List" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 보행해충 초기 리스트] pre_rec_mgmt.p0060.selectTrap02List */
        SELECT
            L_CODE,
            SEQ,
            ORD_SEQ,
            ROW_NUMBER () OVER (
				ORDER BY ORD_SEQ ASC
			) + #{keySize} AS ROW_SEQ,
                M_CODE_KIND,
            M_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) M_CODE_NM,
            S_CODE_KIND,
            S_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) S_CODE_NM,
            D_CODE_KIND,
            D_CODE,
            D_CODE_NM,
            USE_YN,
            0 AS WALK_SUM
        FROM SHC_REC_PRE
        WHERE 1=1
          AND USE_YN = 'Y'
          AND L_CODE = 'P0060'
          AND M_CODE_KIND =  'TRAP02'
        ORDER BY ORD_SEQ ASC
    </select>

    <select id="selectTrap03List" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 설치류 초기 리스트] pre_rec_mgmt.p0060.selectTrap03List */
        SELECT
            L_CODE,
            SEQ,
            ORD_SEQ,
            ROW_NUMBER () OVER (
					ORDER BY ORD_SEQ ASC
			) + #{keySize} AS ROW_SEQ,
                M_CODE_KIND,
            M_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) M_CODE_NM,
            S_CODE_KIND,
            S_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) S_CODE_NM,
            D_CODE_KIND,
            D_CODE,
            D_CODE_NM,
            USE_YN,
            0 AS RAT_SUM
        FROM SHC_REC_PRE
        WHERE 1=1
          AND USE_YN = 'Y'
          AND L_CODE = 'P0060'
          AND M_CODE_KIND =  'TRAP03'
        ORDER BY ORD_SEQ ASC
    </select>

    <insert id="insertFpGridContents" parameterType="map">
        /* [해충 관리 - 비래해충 등록] pre_rec_mgmt.p0060.insertFpGridContents */
        INSERT INTO SHC_REC_PRE_VERMIN
        (	REC_NO,
             SEQ,
             ORD_SEQ,
             M_CODE_KIND,
             M_CODE,
             S_CODE_KIND,
             S_CODE,
             D_CODE_KIND,
             D_CODE,
             D_CODE_NM,
             FLY_VAL1,
             FLY_VAL2,
             FLY_VAL3,
             FLY_VAL4,
             FLY_VAL5,
             FLY_VAL6,
             FLY_VAL7,
             FLY_VAL8,
             FLY_SUM,
             CREATE_ID,
             CREATE_DT)
        VALUES
            (#{newRecNo},
             #{seq},
             #{rowSeq},
             #{mCodeKind},
             #{mCode},
             #{sCodeKind},
             #{sCode},
             #{dCodeKind},
             #{dCode},
             #{dCodeNm},
             COALESCE (#{FLY_VAL1}, 0),
             COALESCE  LL(#{FLY_VAL2}, 0),
             COALESCE (#{FLY_VAL3}, 0),
             COALESCE (#{FLY_VAL4}, 0),
             COALESCE (#{FLY_VAL5}, 0),
             COALESCE (#{FLY_VAL6}, 0),
             COALESCE (#{FLY_VAL7}, 0),
             COALESCE (#{FLY_VAL8}, 0),
             #{flySum},
             #{userId},
             STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s'))
    </insert>


    <update id="updateFpInfo" parameterType="map">
        /* [해충 관리 - 비래 해충 업데이트] pre_rec_mgmt.p0060.updateFpInfo */
        UPDATE SHC_REC_PRE_VERMIN SET
                                      FLY_VAL1 = #{FLY_VAL1},
                                      FLY_VAL2 = #{FLY_VAL2},
                                      FLY_VAL3 = #{FLY_VAL3},
                                      FLY_VAL4 = #{FLY_VAL4},
                                      FLY_VAL5 = #{FLY_VAL5},
                                      FLY_VAL6 = #{FLY_VAL6},
                                      FLY_VAL7 = #{FLY_VAL7},
                                      FLY_VAL8 = #{FLY_VAL8},
                                      FLY_SUM = #{flySum},
                                      MODIFY_ID = #{userId},
                                      MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        WHERE REC_NO = #{recNo}
          AND SEQ = #{seq}
          AND ORD_SEQ = #{rowSeq}
    </update>

    <insert id="insertWpGridContents" parameterType="map">
        /* [해충 관리 - 보행해충 등록] pre_rec_mgmt.p0060.insertWpGridContents */
        INSERT INTO SHC_REC_PRE_VERMIN
        (	REC_NO,
             SEQ,
             ORD_SEQ,
             M_CODE_KIND,
             M_CODE,
             S_CODE_KIND,
             S_CODE,
             D_CODE_KIND,
             D_CODE,
             D_CODE_NM,
             WALK_VAL1,
             WALK_VAL2,
             WALK_VAL3,
             WALK_VAL4,
             WALK_VAL5,
             WALK_VAL6,
             WALK_VAL7,
             WALK_SUM,
             CREATE_ID,
             CREATE_DT)
        VALUES
            (#{newRecNo},
             #{seq},
             #{rowSeq},
             #{mCodeKind},
             #{mCode},
             #{sCodeKind},
             #{sCode},
             #{dCodeKind},
             #{dCode},
             #{dCodeNm},
             IFNULL(#{WALK_VAL1}, 0),
             IFNULL(#{WALK_VAL2}, 0),
             IFNULL(#{WALK_VAL3}, 0),
             IFNULL(#{WALK_VAL4}, 0),
             IFNULL(#{WALK_VAL5}, 0),
             IFNULL(#{WALK_VAL6}, 0),
             IFNULL(#{WALK_VAL7}, 0),
             #{walkSum},
             #{userId},
             STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s'))
    </insert>

    <update id="updateWpInfo" parameterType="map">
        /* [해충 관리 - 보행 해충 업데이트] pre_rec_mgmt.p0060.updateWpInfo */
        UPDATE SHC_REC_PRE_VERMIN SET
                                      WALK_VAL1 = #{WALK_VAL1},
                                      WALK_VAL2 = #{WALK_VAL2},
                                      WALK_VAL3 = #{WALK_VAL3},
                                      WALK_VAL4 = #{WALK_VAL4},
                                      WALK_VAL5 = #{WALK_VAL5},
                                      WALK_VAL6 = #{WALK_VAL6},
                                      WALK_VAL7 = #{WALK_VAL7},
                                      WALK_SUM = #{walkSum},
                                      MODIFY_ID = #{userId},
                                      MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        WHERE REC_NO = #{recNo}
          AND SEQ = #{seq}
          AND ORD_SEQ = #{rowSeq}
    </update>

    <insert id="insertRGridContents" parameterType="map">
        /* [해충 관리 - 설치류 등록] pre_rec_mgmt.p0060.insertRGridContents */
        INSERT INTO SHC_REC_PRE_VERMIN
        (	REC_NO,
             SEQ,
             ORD_SEQ,
             M_CODE_KIND,
             M_CODE,
             S_CODE_KIND,
             S_CODE,
             D_CODE_KIND,
             D_CODE,
             D_CODE_NM,
             RAT_VAL1,
             RAT_VAL2,
             RAT_VAL3,
             RAT_SUM,
             CREATE_ID,
             CREATE_DT)
        VALUES
            (#{newRecNo},
             #{seq},
             #{rowSeq},
             #{mCodeKind},
             #{mCode},
             #{sCodeKind},
             #{sCode},
             #{dCodeKind},
             #{dCode},
             #{dCodeNm},
             IFNULL(#{RAT_VAL1}, 0),
             IFNULL(#{RAT_VAL2}, 0),
             IFNULL(#{RAT_VAL3}, 0),
             #{ratSum},
             #{userId},
             STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s'))
    </insert>

    <update id="updateRInfo" parameterType="map">
        /* [해충 관리 - 설치류 업데이트] pre_rec_mgmt.p0060.updateRInfo */
        UPDATE SHC_REC_PRE_VERMIN SET
                                      RAT_VAL1 = #{RAT_VAL1},
                                      RAT_VAL2 = #{RAT_VAL2},
                                      RAT_VAL3 = #{RAT_VAL3},
                                      RAT_SUM = #{ratSum},
                                      MODIFY_ID = #{userId},
                                      MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        WHERE REC_NO = #{recNo}
          AND SEQ = #{seq}
          AND ORD_SEQ = #{rowSeq}
    </update>

    <select id="selectSavedTrap01List" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 등록된 비래 해충 리스트] pre_rec_mgmt.p0060.selectSavedTrap01List */
        SELECT
            REC_NO AS recNo,
            SEQ AS seq,
            ORD_SEQ AS rowSeq,
            M_CODE_KIND as mCodeKind,
            M_CODE AS mCode,
            S_CODE_KIND AS sCodeKind,
            S_CODE AS sCode,
            D_CODE_KIND AS dCodeKind,
            D_CODE AS dCode,
            D_CODE_NM AS dCodeNm,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS mCodeNm,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS sCodeNm,
            (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS breakReason,
            (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS imprvComm,
            FLY_VAL1,
            FLY_VAL2,
            FLY_VAL3,
            FLY_VAL4,
            FLY_VAL5,
            FLY_VAL6,
            FLY_VAL7,
            FLY_VAL8,
            FLY_SUM AS flySum
        FROM SHC_REC_PRE_VERMIN A
        WHERE 1=1
          AND M_CODE_KIND = 'TRAP01'
          AND REC_NO = #{recNo}
        ORDER BY ORD_SEQ
    </select>

    <select id="selectSavedTrap02List" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 등록된 보행 해충 리스트] pre_rec_mgmt.p0060.selectSavedTrap02List */
        SELECT
            REC_NO AS recNo,
            SEQ AS seq,
            ORD_SEQ AS rowSeq,
            M_CODE_KIND as mCodeKind,
            M_CODE AS mCode,
            S_CODE_KIND AS sCodeKind,
            S_CODE AS sCode,
            D_CODE_KIND AS dCodeKind,
            D_CODE AS dCode,
            D_CODE_NM AS dCodeNm,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS mCodeNm,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS sCodeNm,
            (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS breakReason,
            (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS imprvComm,
            WALK_VAL1,
            WALK_VAL2,
            WALK_VAL3,
            WALK_VAL4,
            WALK_VAL5,
            WALK_VAL6,
            WALK_VAL7,
            WALK_SUM AS walkSum
        FROM SHC_REC_PRE_VERMIN A
        WHERE 1=1
          AND M_CODE_KIND = 'TRAP02'
          AND REC_NO = #{recNo}
        ORDER BY ORD_SEQ
    </select>

    <select id="selectSavedTrap03List" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 등록된 설치류 리스트] pre_rec_mgmt.p0060.selectSavedTrap03List */
        SELECT
            REC_NO AS recNo,
            SEQ AS seq,
            ORD_SEQ AS rowSeq,
            M_CODE_KIND as mCodeKind,
            M_CODE AS mCode,
            S_CODE_KIND AS sCodeKind,
            S_CODE AS sCode,
            D_CODE_KIND AS dCodeKind,
            D_CODE AS dCode,
            D_CODE_NM AS dCodeNm,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS mCodeNm,
            (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS sCodeNm,
            (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS breakReason,
            (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS imprvComm,
            RAT_VAL1,
            RAT_VAL2,
            RAT_VAL3,
            RAT_SUM AS ratSum
        FROM SHC_REC_PRE_VERMIN A
        WHERE 1=1
          AND M_CODE_KIND = 'TRAP03'
          AND REC_NO = #{recNo}
        ORDER BY ORD_SEQ
    </select>

    <select id="selectPreTrapImprv" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 해충 개선 조치 검색하기] pre_rec_mgmt.p0060.selectPreTrapImprv */
        SELECT REC_NO, SEQ, BREAK_YN, BREAK_REASON, IMPRV_YN, IMPRV_COMM, RMK
        FROM SHC_REC_PRE_IMPRV
        WHERE 1=1
          AND REC_NO = #{recNo}
    </select>

    <select id="selectImprvOne" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 위생 개선 조치 검색하기] pre_rec_mgmt.p0060.selectImprvOne */
        SELECT REC_NO, SEQ, BREAK_YN, BREAK_REASON, IMPRV_YN, IMPRV_COMM, RMK
        FROM SHC_REC_PRE_IMPRV
        WHERE 1=1
          AND REC_NO = #{recNo}
          AND SEQ = #{rowSeq}
    </select>

    <insert id="insertImprv" parameterType="map" >
        /* [해충 관리 - 개선 요청 등록] pre_rec_mgmt.p0010.insertImprv */
        INSERT INTO SHC_REC_PRE_IMPRV
        (	REC_NO,
             SEQ,
             BREAK_YN,
             BREAK_REASON,
             IMPRV_YN,
             IMPRV_COMM,
             CREATE_ID,
             CREATE_DT)
        VALUES
            (#{newRecNo},
             #{rowSeq},
             (CASE WHEN #{breakReason} IS NULL THEN 'N' ELSE 'Y' END),
             #{breakReason},
             (CASE WHEN #{imprvComm} IS NULL THEN 'N' ELSE 'Y' END),
             #{imprvComm},
             #{userId},
             STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s'))
    </insert>

    <update id="updateImprv" parameterType="map">
        /* [해충 관리 - 개선 요청 수정] pre_rec_mgmt.p0060.updateImprv */
        UPDATE SHC_REC_PRE_IMPRV SET
                                     BREAK_YN = (CASE WHEN #{breakReason} IS NULL THEN 'N' ELSE 'Y' END),
                                     BREAK_REASON = #{breakReason},
                                     IMPRV_YN = (CASE WHEN #{imprvComm} IS NULL THEN 'N' ELSE 'Y' END),
                                     IMPRV_COMM = #{imprvComm},
                                     MODIFY_ID = #{userId},
                                     MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        WHERE REC_NO = #{recNo} AND SEQ = #{rowSeq}
    </update>

    <delete id="deleteImprvOne" parameterType="map">
        /* [해충 관리 - 개선 요청 수정] pre_rec_mgmt.p0060.deleteImprvOne */
        DELETE FROM SHC_REC_PRE_IMPRV WHERE REC_NO = #{recNo} AND SEQ = #{rowSeq}
    </delete>

    <delete id="deleteTrapList" parameterType="map">
        /* [해충 관리 - 해충 개선 리스트] pre_rec_mgmt.p0060.deleteTrapList */
        DELETE FROM SHC_REC_PRE_VERMIN WHERE REC_NO = #{recNo}
    </delete>

    <delete id="deleteTrapImprv" parameterType="map">
        /* [해충 관리 - 해충 개선 조치 삭제] pre_rec_mgmt.p0060.deleteTrapImprv */
        DELETE FROM SHC_REC_PRE_IMPRV WHERE REC_NO = #{recNo}
    </delete>

    <select id="selectStdPoint" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 기준 정보 가져오기] pre_rec_mgmt.p0060.selectStdPoint */
        SELECT *
        FROM SHC_COMM_CODE
        WHERE CODE_KIND = 'TRAPDF'
          AND CODE='001'
    </select>

    <select id="selectFinalCheckList" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 인증원으로 보낼 체크 리스트 가져오기] pre_rec_mgmt.p0060.selectFinalCheckList */
        SELECT A.*
        FROM (
                 SELECT #{lcnsNo} AS LCNS_NO,
                        #{companyNm} AS COMPANY_NM,
                        DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
                        DATE_FORMAT(CREATE_DT, '%H:%i:%s') AS CREATE_TIME,
                        'Y' AS APPR_YN,
                        #{lCode} AS REC_CODE,
                        #{lCodeNm} AS REC_NM,
                        ORD_SEQ AS SEQ,
                        M_CODE_KIND,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS TRAP_NM,
                        S_CODE AS AREA_CODE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS AREA_NM,
                        D_CODE_NM AS WP_NM,
                        IFNULL(FLY_VAL1, 0) AS FLY_VAL1,
                        IFNULL(FLY_VAL2, 0) AS FLY_VAL2,
                        IFNULL(FLY_VAL3, 0) AS FLY_VAL3,
                        IFNULL(FLY_VAL4, 0) AS FLY_VAL4,
                        IFNULL(FLY_VAL5, 0) AS FLY_VAL5,
                        IFNULL(FLY_VAL6, 0) AS FLY_VAL6,
                        IFNULL(FLY_VAL7, 0) AS FLY_VAL7,
                        IFNULL(FLY_VAL8, 0) AS FLY_VAL8,
                        IFNULL(FLY_SUM, 0) AS FLY_SUM,
                        WALK_VAL1 AS WALK_VAL1,
                        WALK_VAL2 AS WALK_VAL2,
                        WALK_VAL3 AS WALK_VAL3,
                        WALK_VAL4 AS WALK_VAL4,
                        WALK_VAL5 AS WALK_VAL5,
                        WALK_VAL6 AS WALK_VAL6,
                        WALK_VAL7 AS WALK_VAL7,
                        WALK_SUM AS WALK_SUM,
                        RAT_VAL1 AS RAT_VAL1,
                        RAT_VAL2 AS RAT_VAL2,
                        RAT_VAL3 AS RAT_VAL3,
                        RAT_SUM AS RAT_SUM,
                        (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS BREAK_REASON,
                        (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS IMPRV_COMM,
                        ORD_SEQ
                 FROM SHC_REC_PRE_VERMIN A
                 WHERE 1=1
                   AND REC_NO = #{recNo}
                   AND M_CODE_KIND = 'TRAP01'
                   AND S_CODE IN ('C', 'N', 'E')
                 UNION
                 SELECT #{lcnsNo} AS LCNS_NO,
                        #{companyNm} AS COMPANY_NM,
                        DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
                        DATE_FORMAT(CREATE_DT, '%H:%i:%s') AS CREATE_TIME,
                        'Y' AS APPR_YN,
                        #{lCode} AS REC_CODE,
                        #{lCodeNm} AS REC_NM,
                        ORD_SEQ AS SEQ,
                        M_CODE_KIND,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS TRAP_NM,
                        S_CODE AS AREA_CODE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS AREA_NM,
                        D_CODE_NM AS WP_NM,
                        FLY_VAL1 AS FLY_VAL1,
                        FLY_VAL2 AS FLY_VAL2,
                        FLY_VAL3 AS FLY_VAL3,
                        FLY_VAL4 AS FLY_VAL4,
                        FLY_VAL5 AS FLY_VAL5,
                        FLY_VAL6 AS FLY_VAL6,
                        FLY_VAL7 AS FLY_VAL7,
                        FLY_VAL8 AS FLY_VAL8,
                        FLY_SUM AS FLY_SUM,
                        IFNULL(WALK_VAL1, 0) AS WALK_VAL1,
                        IFNULL(WALK_VAL2, 0) AS WALK_VAL2,
                        IFNULL(WALK_VAL3, 0) AS WALK_VAL3,
                        IFNULL(WALK_VAL4, 0) AS WALK_VAL4,
                        IFNULL(WALK_VAL5, 0) AS WALK_VAL5,
                        IFNULL(WALK_VAL6, 0) AS WALK_VAL6,
                        IFNULL(WALK_VAL7, 0) AS WALK_VAL7,
                        IFNULL(WALK_SUM, 0) AS WALK_SUM,
                        RAT_VAL1 AS RAT_VAL1,
                        RAT_VAL2 AS RAT_VAL2,
                        RAT_VAL3 AS RAT_VAL3,
                        RAT_SUM AS RAT_SUM,
                        (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS BREAK_REASON,
                        (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS IMPRV_COMM,
                        ORD_SEQ
                 FROM SHC_REC_PRE_VERMIN A
                 WHERE 1=1
                   AND REC_NO = #{recNo}
                   AND M_CODE_KIND = 'TRAP02'
                   AND S_CODE IN ('C', 'N', 'E')
                 UNION
                 SELECT #{lcnsNo} AS LCNS_NO,
                        #{companyNm} AS COMPANY_NM,
                        DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
                        DATE_FORMAT(CREATE_DT, '%H:%i:%s') AS CREATE_TIME,
                        'Y' AS APPR_YN,
                        #{lCode} AS REC_CODE,
                        #{lCodeNm} AS REC_NM,
                        ORD_SEQ AS SEQ,
                        M_CODE_KIND,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS TRAP_NM,
                        S_CODE AS AREA_CODE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS AREA_NM,
                        D_CODE_NM AS WP_NM,
                        FLY_VAL1 AS FLY_VAL1,
                        FLY_VAL2 AS FLY_VAL2,
                        FLY_VAL3 AS FLY_VAL3,
                        FLY_VAL4 AS FLY_VAL4,
                        FLY_VAL5 AS FLY_VAL5,
                        FLY_VAL6 AS FLY_VAL6,
                        FLY_VAL7 AS FLY_VAL7,
                        FLY_VAL8 AS FLY_VAL8,
                        FLY_SUM AS FLY_SUM,
                        WALK_VAL1 AS WALK_VAL1,
                        WALK_VAL2 AS WALK_VAL2,
                        WALK_VAL3 AS WALK_VAL3,
                        WALK_VAL4 AS WALK_VAL4,
                        WALK_VAL5 AS WALK_VAL5,
                        WALK_VAL6 AS WALK_VAL6,
                        WALK_VAL7 AS WALK_VAL7,
                        WALK_SUM AS WALK_SUM,
                        IFNULL(RAT_VAL1, 0) AS RAT_VAL1,
                        IFNULL(RAT_VAL2, 0) AS RAT_VAL2,
                        IFNULL(RAT_VAL3, 0) AS RAT_VAL3,
                        IFNULL(RAT_SUM, 0) AS RAT_SUM,
                        (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS BREAK_REASON,
                        (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS IMPRV_COMM,
                        ORD_SEQ
                 FROM SHC_REC_PRE_VERMIN A
                 WHERE 1=1
                   AND REC_NO = #{recNo}
                   AND M_CODE_KIND = 'TRAP03'
                   AND S_CODE IN ('C', 'N', 'E')
             ) A
        ORDER BY A.M_CODE_KIND, A.ORD_SEQ
    </select>

    <select id="selectFinalImprv" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 인증원으로 보낼 개선 조치 가져오기] pre_rec_mgmt.p0060.selectFinalImprv */
        SELECT #{lcnsNo} AS LCNS_NO,
               #{companyNm} AS COMPANY_NM,
               DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
               DATE_FORMAT(CREATE_DT, '%H:%i:%s') AS CREATE_TIME,
               'Y' AS APPR_YN,
               #{lCode} AS REC_CODE,
               #{lCodeNm} AS REC_NM,
               SEQ - 1 AS SEQ,
               BREAK_REASON,
               IMPRV_COMM
        FROM SHC_REC_PRE_IMPRV
        WHERE 1=1
          AND REC_NO = #{recNo}
    </select>

    <select id="selectCheckListForExcel" parameterType="map" resultType="camelMap">
        /* [해충 관리 - 엑셀 다운로드] pre_rec_mgmt.p0060.selectCheckListForExcel */
        SELECT 	TRAP_NM,
                  AREA_NM,
                  WP_NM,
                  FLY_VAL1,
                  FLY_VAL2,
                  FLY_VAL3,
                  FLY_VAL4,
                  FLY_VAL5,
                  FLY_VAL6,
                  FLY_VAL7,
                  FLY_VAL8,
                  FLY_SUM,
                  WALK_VAL1,
                  WALK_VAL2,
                  WALK_VAL3,
                  WALK_VAL4,
                  WALK_VAL5,
                  WALK_VAL6,
                  WALK_VAL7,
                  WALK_SUM,
                  RAT_VAL1,
                  RAT_VAL2,
                  RAT_VAL3,
                  RAT_SUM,
                  breakReason,
                  imprvComm
        FROM (
                 SELECT DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS TRAP_NM,
                        S_CODE AS AREA_CODE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS AREA_NM,
                        D_CODE_NM AS WP_NM,
                        IFNULL(FLY_VAL1, 0) AS FLY_VAL1,
                        IFNULL(FLY_VAL2, 0) AS FLY_VAL2,
                        IFNULL(FLY_VAL3, 0) AS FLY_VAL3,
                        IFNULL(FLY_VAL4, 0) AS FLY_VAL4,
                        IFNULL(FLY_VAL5, 0) AS FLY_VAL5,
                        IFNULL(FLY_VAL6, 0) AS FLY_VAL6,
                        IFNULL(FLY_VAL7, 0) AS FLY_VAL7,
                        IFNULL(FLY_VAL8, 0) AS FLY_VAL8,
                        IFNULL(FLY_SUM, 0) AS FLY_SUM,
                        WALK_VAL1 AS WALK_VAL1,
                        WALK_VAL2 AS WALK_VAL2,
                        WALK_VAL3 AS WALK_VAL3,
                        WALK_VAL4 AS WALK_VAL4,
                        WALK_VAL5 AS WALK_VAL5,
                        WALK_VAL6 AS WALK_VAL6,
                        WALK_VAL7 AS WALK_VAL7,
                        WALK_SUM AS WALK_SUM,
                        RAT_VAL1 AS RAT_VAL1,
                        RAT_VAL2 AS RAT_VAL2,
                        RAT_VAL3 AS RAT_VAL3,
                        RAT_SUM AS RAT_SUM,
                        (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS breakReason,
                        (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS imprvComm,
                        M_CODE_KIND, ORD_SEQ
                 FROM SHC_REC_PRE_VERMIN A
                 WHERE 1=1
                   AND REC_NO = #{recNo}
                   AND M_CODE_KIND = 'TRAP01'
                   AND S_CODE IN ('C', 'N', 'E')
                 UNION
                 SELECT DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS TRAP_NM,
                        S_CODE AS AREA_CODE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS AREA_NM,
                        D_CODE_NM AS WP_NM,
                        FLY_VAL1 AS FLY_VAL1,
                        FLY_VAL2 AS FLY_VAL2,
                        FLY_VAL3 AS FLY_VAL3,
                        FLY_VAL4 AS FLY_VAL4,
                        FLY_VAL5 AS FLY_VAL5,
                        FLY_VAL6 AS FLY_VAL6,
                        FLY_VAL7 AS FLY_VAL7,
                        FLY_VAL8 AS FLY_VAL8,
                        FLY_SUM AS FLY_SUM,
                        IFNULL(WALK_VAL1, 0) AS WALK_VAL1,
                        IFNULL(WALK_VAL2, 0) AS WALK_VAL2,
                        IFNULL(WALK_VAL3, 0) AS WALK_VAL3,
                        IFNULL(WALK_VAL4, 0) AS WALK_VAL4,
                        IFNULL(WALK_VAL5, 0) AS WALK_VAL5,
                        IFNULL(WALK_VAL6, 0) AS WALK_VAL6,
                        IFNULL(WALK_VAL7, 0) AS WALK_VAL7,
                        IFNULL(WALK_SUM, 0) AS WALK_SUM,
                        RAT_VAL1 AS RAT_VAL1,
                        RAT_VAL2 AS RAT_VAL2,
                        RAT_VAL3 AS RAT_VAL3,
                        RAT_SUM AS RAT_SUM,
                        (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS breakReason,
                        (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS imprvComm,
                        M_CODE_KIND, ORD_SEQ
                 FROM SHC_REC_PRE_VERMIN A
                 WHERE 1=1
                   AND REC_NO = #{recNo}
                   AND M_CODE_KIND = 'TRAP02'
                   AND S_CODE IN ('C', 'N', 'E')
                 UNION
                 SELECT DATE_FORMAT(CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) AS TRAP_NM,
                        S_CODE AS AREA_CODE,
                        (SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND = S_CODE_KIND AND CODE = S_CODE) AS AREA_NM,
                        D_CODE_NM AS WP_NM,
                        FLY_VAL1 AS FLY_VAL1,
                        FLY_VAL2 AS FLY_VAL2,
                        FLY_VAL3 AS FLY_VAL3,
                        FLY_VAL4 AS FLY_VAL4,
                        FLY_VAL5 AS FLY_VAL5,
                        FLY_VAL6 AS FLY_VAL6,
                        FLY_VAL7 AS FLY_VAL7,
                        FLY_VAL8 AS FLY_VAL8,
                        FLY_SUM AS FLY_SUM,
                        WALK_VAL1 AS WALK_VAL1,
                        WALK_VAL2 AS WALK_VAL2,
                        WALK_VAL3 AS WALK_VAL3,
                        WALK_VAL4 AS WALK_VAL4,
                        WALK_VAL5 AS WALK_VAL5,
                        WALK_VAL6 AS WALK_VAL6,
                        WALK_VAL7 AS WALK_VAL7,
                        WALK_SUM AS WALK_SUM,
                        IFNULL(RAT_VAL1, 0) AS RAT_VAL1,
                        IFNULL(RAT_VAL2, 0) AS RAT_VAL2,
                        IFNULL(RAT_VAL3, 0) AS RAT_VAL3,
                        IFNULL(RAT_SUM, 0) AS RAT_SUM,
                        (SELECT B.BREAK_REASON FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS breakReason,
                        (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.SEQ = A.ORD_SEQ AND B.REC_NO = A.REC_NO) AS imprvComm,
                        M_CODE_KIND, ORD_SEQ
                 FROM SHC_REC_PRE_VERMIN A
                 WHERE 1=1
                   AND REC_NO = #{recNo}
                   AND M_CODE_KIND = 'TRAP03'
                   AND S_CODE IN ('C', 'N', 'E')
             ) A
        ORDER BY A.M_CODE_KIND, A.ORD_SEQ
    </select>

</mapper>