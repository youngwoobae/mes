<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daedan.mes.haccp.project.pre_rec_mgmt.P0110">

    <select id="gridPaging" parameterType="map" resultType="camelMap">
        SELECT B.REC_NO
             , DATE_FORMAT(B.CREATE_DT, '%Y-%m-%d') as CREATE_DT
             ,(SELECT C.CODE_NM FROM SHC_COMM_CODE C WHERE SUBSTR(C.CODE_KIND,1,3)='APP' AND C.CODE = B.REVW_STATUS) AS REVW_STATUS
             ,(SELECT C.CODE_NM FROM SHC_COMM_CODE C WHERE SUBSTR(C.CODE_KIND,1,3)='APP' AND C.CODE = B.APPR_STATUS) AS APPR_STATUS
             , M_CODE_KIND
             , (SELECT L_CODE_NM FROM SHC_REC_MAIN WHERE L_CODE = #{recLargeCode} ) AS L_CODE_NM
        FROM
            (	SELECT A.REC_NO, A.M_CODE_KIND
                      ,(SELECT L_CODE_NM FROM SHC_REC_MAIN WHERE L_CODE = #{recLargeCode}) AS L_CODE_NM
                      , A.CREATE_DT
                      ,(SELECT B.REVW_STATUS FROM SHC_APPR_LIST B WHERE B.REC_NO = A.REC_NO) AS REVW_STATUS
                      ,(SELECT B.APPR_STATUS FROM SHC_APPR_LIST B WHERE B.REC_NO = A.REC_NO) AS APPR_STATUS
                 FROM SHC_REC_PRE_COOL A
                 WHERE A.CREATE_DT BETWEEN STR_TO_DATE(#{start},'%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{end},' 23:59:59'), '%Y-%m-%d %H:%i:%s')
                 GROUP BY A.REC_NO, A.CREATE_DT, A.M_CODE_KIND
            ) B
        ORDER BY B.CREATE_DT DESC
            LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="gridPagingCnt" parameterType="map" resultType="camelMap">
        SELECT COUNT(*)AS CNT
        FROM (SELECT REC_NO FROM SHC_REC_PRE_COOL
              WHERE CREATE_DT BETWEEN STR_TO_DATE(#{start},'%Y-%m-%d') AND STR_TO_DATE(CONCAT(#{end},' 23:59:59'), '%Y-%m-%d %H:%i:%s')
              GROUP by REC_NO) CNT
    </select>

    <select id="selectSavedCheckList" parameterType="map" resultType="camelMap">
        SELECT A.*,
               (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.REC_NO = A.REC_NO AND B.SEQ = A.SEQ) AS IMPRV
        FROM(
                SELECT REC_NO, MIN(SEQ) SEQ, MIN(ORD_NUM) ORD_SEQ, M_CODE
                     , MIN((SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND='COOLST' AND A.CODE = M_CODE)) M_CODE_NM
                     , AVG(STD_VAL) STD_VAL
                     , CAST(MIN(CASE WHEN ORD_NUM=1 THEN MEAS_HH END) as SIGNED) as MEAS_HH
                     , CAST(MIN(CASE WHEN ORD_NUM=1 THEN MEAS_MM END) as SIGNED) as MEAS_MM
                     , MIN(CASE WHEN ORD_NUM=1 THEN MEAS_VAL END) as MEAS_VAL
                     , CAST(MIN(CASE WHEN ORD_NUM=2 THEN MEAS_HH END) as SIGNED) as MEAS_HH2
                     , CAST(MIN(CASE WHEN ORD_NUM=2 THEN MEAS_MM END) as SIGNED) as MEAS_MM2
                     , MIN(CASE WHEN ORD_NUM=2 THEN MEAS_VAL END) as MEAS_VAL2
                     , MIN(CASE WHEN ORD_NUM=1 THEN RMK END) as RMK
                FROM (
                         select A.*, ROW_NUMBER() OVER(PARTITION BY REC_NO, M_CODE
			                                        ORDER BY LPAD(MEAS_HH,2,'0'), LPAD(MEAS_MM,2,'0')) ORD_NUM
                         FROM SHC_REC_PRE_COOL A
                         WHERE A.REC_NO = #{recNo}
                     ) TM
                WHERE ORD_NUM <![CDATA[ <= ]]> 2 -- 2개 이상 일 경우 표시 되지 않음
                GROUP BY REC_NO, M_CODE
            ) A
        ORDER BY A.REC_NO, A.SEQ
    </select>

    <select id="selectPlaceList" parameterType="map" resultType="camelMap">
        SELECT A.L_CODE, A.SEQ, A.ORD_SEQ, A.M_CODE_KIND, A.M_CODE,
               (SELECT B.CODE_NM FROM SHC_COMM_CODE B WHERE B.CODE_KIND = A.M_CODE_KIND AND B.CODE = A.M_CODE) AS M_CODE_NM,
               (SELECT B.CODE_DESC FROM SHC_COMM_CODE B WHERE B.CODE_KIND = A.M_CODE_KIND AND B.CODE = A.M_CODE) AS M_CODE_DESC
        FROM SHC_REC_PRE A
        WHERE 1=1
          AND L_CODE = #{recLargeCode}
          AND USE_YN = 'Y'
        ORDER BY ORD_SEQ ASC
    </select>

    <insert id="insertPreCool" parameterType="map">
        INSERT INTO SHC_REC_PRE_COOL
        (
            REC_NO
        , SEQ
        , ORD_SEQ
        , M_CODE_KIND
        , M_CODE
        , WORK_AREA
        , STD_VAL
        , MEAS_HH
        , MEAS_MM
        , MEAS_VAL
        , RMK
        , CREATE_ID
        , CREATE_DT
        )VALUES(
                   #{newRecNo},
                   ( SELECT IFNULL(MAX(C.SEQ),0)+1 FROM SHC_REC_PRE_COOL C where C.REC_NO =#{newRecNo} ),
                   ( SELECT IFNULL(MAX(C.ORD_SEQ),0)+1 FROM SHC_REC_PRE_COOL C where C.REC_NO =#{newRecNo} and C.M_CODE = #{mCode}),
                   #{mCodeKind},
                   #{mCode},
                   #{workArea},
                   #{stdVal},
                   #{measHh},
                   #{measMm},
                   #{measVal},
                   #{rmk},
                   #{userId},
                   current_timestamp()
               )
    </insert>

    <update id="updatePreCool" parameterType="map">
        UPDATE SHC_REC_PRE_COOL SET
                                    MEAS_HH = #{measHh},
                                    MEAS_MM = #{measMm},
                                    MEAS_VAL = #{measVal},
                                    MODIFY_DT = current_timestamp()
        WHERE REC_NO = #{recNo}
          AND SEQ = #{seq}
          AND ORD_SEQ = #{ordSeq}
    </update>

    <update id="updatePreCool2" parameterType="map">
        UPDATE SHC_REC_PRE_COOL SET
                                    MEAS_HH = #{measHh2},
                                    MEAS_MM = #{measMm2},
                                    MEAS_VAL = #{measVal2},
                                    MODIFY_DT = current_timestamp()
        WHERE REC_NO = #{recNo}
          AND SEQ = #{seq}
          AND ORD_SEQ = #{ordSeq}
    </update>

    <select id="selectPreImprv" parameterType="map" resultType="camelMap">
        SELECT REC_NO, SEQ, BREAK_YN, BREAK_REASON, IMPRV_YN, IMPRV_COMM, RMK
        FROM SHC_REC_PRE_IMPRV
        WHERE 1=1
          AND REC_NO = #{recNo}
          AND SEQ = #{seq}
    </select>

    <insert id="insertPreImprv" parameterType="map" >
        INSERT INTO SHC_REC_PRE_IMPRV
        (	REC_NO,
             SEQ,
             BREAK_YN,
             IMPRV_YN,
             IMPRV_COMM,
             CREATE_ID,
             CREATE_DT)
        VALUES
            (#{newRecNo},
             ( SELECT ifnull(MAX(SEQ),0) FROM SHC_REC_PRE_COOL where REC_NO =#{newRecNo} ),
             'Y',
             'Y',
             #{imprv},
             #{userId},
             current_timestamp()
            )
    </insert>

    <insert id="insertPreImprv2" parameterType="map" >
        INSERT INTO SHC_REC_PRE_IMPRV
        (	REC_NO,
             SEQ,
             BREAK_YN,
             IMPRV_YN,
             IMPRV_COMM,
             CREATE_ID,
             CREATE_DT)
        VALUES
            (#{recNo},
             #{seq},
             'Y',
             'Y',
             #{imprv},
             #{userId},
             current_timestamp()
            )
    </insert>


    <update id="updatePreImprv" parameterType="map">
        UPDATE SHC_REC_PRE_IMPRV SET
                                     IMPRV_COMM = #{imprv},
                                     MODIFY_ID = #{userId},
                                     MODIFY_DT = current_timestamp()
        WHERE REC_NO = #{recNo}
          AND SEQ = #{seq}
    </update>

    <delete id="deletePreCool" parameterType="map">
        DELETE FROM SHC_REC_PRE_COOL WHERE REC_NO = #{recNo}
    </delete>

    <delete id="deletePreImprv" parameterType="map">
        DELETE FROM SHC_REC_PRE_IMPRV WHERE REC_NO = #{recNo}
    </delete>

    <select id="selectFinalCheckList" parameterType="map" resultType="camelMap">
        /* [선행요건 냉장냉동일지관리 - 인증원으로 보낼 체크 리스트 가져오기] pre_rec_mgmt.p0110.selectFinalCheckList */
        SELECT
            #{lcnsNo} AS LCNS_NO,
            #{companyNm} AS COMPANY_NM,
            DATE_FORMAT(A.CREATE_DT, '%Y-%m-%d') AS CREATE_DATE,
            DATE_FORMAT(A.CREATE_DT, '%H:%i:%s') AS CREATE_TIME,
            'Y' AS APPR_YN,
            #{lCode} AS REC_CODE,
            #{lCodeNm} AS REC_NM,
            A.*,
            CONCAT(MEAS_HH, ":", MEAS_MM) AS MEAS_TIME1,
            CONCAT(MEAS_HH2, ":", MEAS_MM2) AS MEAS_TIME2,
            (SELECT B.IMPRV_COMM FROM SHC_REC_PRE_IMPRV B WHERE B.REC_NO = A.REC_NO AND B.SEQ = A.SEQ) AS IMPRV_COMM
        FROM(
                SELECT REC_NO, MIN(SEQ) SEQ, MIN(ORD_NUM) ORD_SEQ, M_CODE
                     , MIN((SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND='COOLST' AND A.CODE = M_CODE)) WP_NM
                     , AVG(STD_VAL) STD_VAL
                     , MIN(CASE WHEN ORD_NUM=1 THEN LPAD(MEAS_HH,2,'0') END) as MEAS_HH
                     , MIN(CASE WHEN ORD_NUM=1 THEN LPAD(MEAS_MM,2,'0') END) as MEAS_MM
                     , MIN(CASE WHEN ORD_NUM=1 THEN MEAS_VAL END) as MEAS_VAL1
                     , MIN(CASE WHEN ORD_NUM=2 THEN LPAD(MEAS_HH,2,'0') END) as MEAS_HH2
                     , MIN(CASE WHEN ORD_NUM=2 THEN LPAD(MEAS_MM,2,'0') END) as MEAS_MM2
                     , MIN(CASE WHEN ORD_NUM=2 THEN MEAS_VAL END) as MEAS_VAL2
                     , MIN(CASE WHEN ORD_NUM=1 THEN RMK END) as RMK
                     , MIN(TM.CREATE_DT) AS CREATE_DT
                FROM (
                         select A.*, ROW_NUMBER() OVER(PARTITION BY REC_NO, M_CODE
			                                        ORDER BY LPAD(MEAS_HH,2,'0'), LPAD(MEAS_MM,2,'0')) ORD_NUM
                         FROM SHC_REC_PRE_COOL A
                         WHERE A.REC_NO = #{recNo}
                     ) TM
                WHERE ORD_NUM <![CDATA[ <= ]]> 2 -- 2개 이상 일 경우 표시 되지 않음
                GROUP BY REC_NO, M_CODE
            ) A
        ORDER BY A.REC_NO, A.SEQ
    </select>
</mapper>