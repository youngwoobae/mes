<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daedan.mes.haccp.project.equip_ctrl.monitoring">

    <select id="selectCcpEquipList" resultType="camelMap">
        /* [설비별 모니터링 - 설비정보 가져오기] equip_ctrl.monitoring.selectCcpEquipList */
        SELECT
            L_CODE
             ,M_CODE
             ,M_CODE_NM
        FROM SHC_CCP_EQUIP
        WHERE USE_YN = 'Y'
        ORDER BY L_CODE, M_CODE
    </select>

    <select id="selectCcpEquipInfo" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 설비정보 가져오기] equip_ctrl.monitoring.selectCcpEquipList */
        SELECT
            L_CODE
             ,M_CODE
             ,M_CODE_NM
        FROM SHC_CCP_EQUIP
        WHERE USE_YN = 'Y'
          AND M_CODE = #{mCode}
    </select>

    <select id="selectCcpLmtItemList" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 한계항목 가져오기] equip_ctrl.monitoring.selectCcpLmtItemList */
        SELECT
            LMT_ITEM_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE B WHERE CODE_KIND = SCLI.LMT_ITEM_CODE_KIND AND CODE = SCLI.LMT_ITEM_CODE) as name,
            LMT_MIN_VAL,
            LMT_MAX_VAL,
            BREAK_RCV_TIME
        FROM SHC_CCP_LMT_ITEM SCLI
                 INNER JOIN SHC_REC_CCP SRC
                            ON SCLI.LMT_STD_CODE = SRC.LMT_STD_CODE
                 LEFT JOIN SHC_CCP_LMT_STD SCLS
                           ON SCLI.LMT_STD_CODE = SCLS.LMT_STD_CODE
        WHERE L_CODE = #{lCode}
          AND M_CODE = #{mCode}
    </select>

    <select id="selectCcpRawDataList" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 설비값 가져오기 (CCP센서RAW데이터)] equip_ctrl.monitoring.selectCcpRawDataList */
        SELECT
            T.MEAS_TIME
             ,T.MEAS_VAL
             ,T.CODE_NM
             ,T.LMT_ITEM_CODE
             ,T.SEQ
             ,T.LMT_OVER_YN
             ,T.BREAK_TYPE_CODE
        FROM (
                 SELECT
                     DATE_FORMAT(SCRD.MEAS_TIME, '%Y/%m/%d %H:%i:%s') AS MEAS_TIME
                      ,SCRD.MEAS_VAL
                      ,(SELECT A.CODE_NM FROM SHC_COMM_CODE A WHERE A.CODE_KIND = 'LMTITM' AND A.CODE = SCRD.LMT_ITEM_CODE) AS CODE_NM
                      ,SCRD.LMT_ITEM_CODE
                      ,SCRD.SEQ
                      ,CASE WHEN SRCI.REG_DATE IS NULL THEN 'N'
                            ELSE 'Y' END AS LMT_OVER_YN
                      ,SRCI.BREAK_TYPE_CODE
                 FROM SHC_CCP_RAW_DATA SCRD
                          LEFT JOIN SHC_REC_CCP_IMPRV SRCI
                                    ON SCRD.REG_DATE = SRCI.REG_DATE
                                        AND SCRD.M_CODE = SRCI.M_CODE
                                        AND SCRD.SEQ = SRCI.SEQ
                                        AND SCRD.LMT_ITEM_CODE = SRCI.LMT_ITEM_CODE
                 WHERE SCRD.M_CODE = #{mCode}
                   AND DATE_FORMAT(SCRD.MEAS_TIME, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
                   AND SCRD.LMT_ITEM_CODE = #{lmtItemCode}
                 ORDER BY SCRD.LMT_ITEM_CODE, SCRD.MEAS_TIME DESC
                     LIMIT #{limit}
             )T
        ORDER BY T.MEAS_TIME
    </select>

    <select id="selectCcpRawDataLmtOverMaxTime" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 한계치 Y/N 시간 가져오기(CCP센서RAW데이터)] equip_ctrl.monitoring.selectCcpRawDataLmtOverMaxTime */
        SELECT
            MAX(T.MEAS_TIME) AS MEAS_TIME
             ,T.LMT_OVER_YN
             ,T.BREAK_TYPE_CODE
        FROM (
                 SELECT
                     DATE_FORMAT(SCRD.MEAS_TIME, '%Y/%m/%d %H:%i:%s') AS MEAS_TIME
                      ,CASE WHEN SRCI.REG_DATE IS NULL THEN 'N' ELSE 'Y' END AS LMT_OVER_YN
                      ,SRCI.BREAK_TYPE_CODE
                 FROM SHC_CCP_RAW_DATA SCRD
                          LEFT JOIN SHC_REC_CCP_IMPRV SRCI
                                    ON SCRD.REG_DATE = SRCI.REG_DATE
                                        AND SCRD.M_CODE = SRCI.M_CODE
                                        AND SCRD.SEQ = SRCI.SEQ
                                        AND SCRD.LMT_ITEM_CODE = SRCI.LMT_ITEM_CODE
                 WHERE SCRD.M_CODE = #{mCode}
                   AND DATE_FORMAT(SCRD.MEAS_TIME, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
                   AND SCRD.LMT_ITEM_CODE = #{lmtItemCode}
                 ORDER BY MEAS_TIME
             )T
        GROUP BY T.LMT_OVER_YN ,T.BREAK_TYPE_CODE
    </select>

    <select id="selectCcpRawDataLmtOverMinTime" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 한계치 최초 시간 가져오기(CCP센서RAW데이터)] equip_ctrl.monitoring.selectCcpRawDataLmtOverMaxTime */
        SELECT
        MIN(T.MEAS_TIME) AS MEAS_TIME
        FROM (
        SELECT
        DATE_FORMAT(SCRD.MEAS_TIME, '%Y/%m/%d %H:%i:%s') AS MEAS_TIME
        ,CASE WHEN SRCI.REG_DATE IS NULL THEN 'N' ELSE 'Y' END AS LMT_OVER_YN
        ,SRCI.BREAK_TYPE_CODE
        FROM SHC_CCP_RAW_DATA SCRD
        LEFT JOIN SHC_REC_CCP_IMPRV SRCI
        ON SCRD.REG_DATE = SRCI.REG_DATE
        AND SCRD.M_CODE = SRCI.M_CODE
        AND SCRD.SEQ = SRCI.SEQ
        AND SCRD.LMT_ITEM_CODE = SRCI.LMT_ITEM_CODE
        WHERE SCRD.M_CODE = #{mCode}
        AND DATE_FORMAT(SCRD.MEAS_TIME, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d')
        <if test="measTime != null and measTime !=''">
            AND DATE_FORMAT(MEAS_TIME, '%Y/%m/%d %H:%i:%s') <![CDATA[>]]> DATE_FORMAT(#{measTime}, '%Y/%m/%d %H:%i:%s')
        </if>
        AND SCRD.LMT_ITEM_CODE = #{lmtItemCode}
        <if test="breakTypeCode != null and breakTypeCode !=''">
            AND SRCI.BREAK_TYPE_CODE = #{breakTypeCode}
        </if>
        ORDER BY MEAS_TIME
        )T
    </select>

    <select id="selectCcpcleBreakYn" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 이탈회복시간내의 이탈여부를 조회 ] rawdata.ccpcleBreakYn */
        SELECT CASE WHEN (IM.REG_DATE IS NOT NULL AND IM.M_CODE IS NOT NULL AND IM.SEQ IS NOT NULL) THEN 1 ELSE 0 END BREAK_YN
        FROM SHC_CCP_RAW_DATA DA
                 LEFT JOIN SHC_REC_CCP_IMPRV IM
                           ON DA.REG_DATE = IM.REG_DATE
                               AND DA.M_CODE = IM.M_CODE
                               AND DA.SEQ = IM.SEQ
                               AND DA.LMT_ITEM_CODE = IM.LMT_ITEM_CODE
        WHERE DA.M_CODE = #{mCode}
          AND STR_TO_DATE(MEAS_TIME, '%Y-%m-%d %H:%i') > DATE_SUB(DATE_FORMAT(#{measTime}, '%Y/%m/%d %H:%i:%s'), INTERVAL #{breakRcvTime} MINUTE)
    </select>

    <select id="selectCcpDataList" parameterType="map" resultType="camelMap">
        /* [설비별 모니터링 - 설비 이력 가져오기 (SHC_REC_CCP)] equip_ctrl.monitoring.selectCcpDataList */
        SELECT
            T.MEAS_TIME
             ,T.MEAS_VAL
             ,T.CODE_NM
             ,T.LMT_ITEM_CODE
             ,T.SEQ
        FROM (
                 SELECT
                     DATE_FORMAT(SRCD.MEAS_TIME, '%Y/%m/%d %H:%i:%s') AS MEAS_TIME
                      ,SRCD.MEAS_VAL
                      ,(SELECT A.CODE_NM FROM SHC_COMM_CODE A WHERE A.CODE_KIND = 'LMTITM' AND A.CODE = SRCD.LMT_ITEM_CODE) AS CODE_NM
                      ,SRCD.LMT_ITEM_CODE
                      ,SEQ
                 FROM SHC_REC_CCP_DATA SRCD
                 WHERE SRCD.M_CODE = #{mCode}
                   AND SRCD.LMT_ITEM_CODE = #{lmtItemCode}
                   AND DATE_FORMAT(SRCD.MEAS_TIME, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{start}, '%Y-%m-%d') AND DATE_FORMAT(#{end},'%Y-%m-%d')
                 ORDER BY SRCD.LMT_ITEM_CODE, SRCD.MEAS_TIME DESC
             )T
        ORDER BY T.MEAS_TIME
    </select>
</mapper>