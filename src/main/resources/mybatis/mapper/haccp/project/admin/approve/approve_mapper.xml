<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daedan.mes.haccp.project.admin.approve">

    <select id="gridPagingCnt" parameterType="map" resultType="camelMap">
        /* [결재선 - 그리드 페이징 카운트] admin.approve.gridPagingCnt */
        SELECT COUNT(*) AS CNT
        FROM (
        SELECT
        A.SEQ, A.L_CODE, A.USE_YN, A.REVW_YN
        , COALESCE ((SELECT B.USER_NAME FROM SHC_USERS B WHERE B.USER_ID = A.REVW), '') AS REVW
        , (SELECT B.USER_NAME FROM SHC_USERS B WHERE B.USER_ID = A.APPR) AS APPR
        ,A.RMK, A.CREATE_ID, A.CREATE_DT, A.MODIFY_ID, A.MODIFY_DT,
        (SELECT B.L_CODE_NM FROM SHC_REC_MAIN B WHERE B.L_CODE = A.L_CODE) AS L_CODE_NM,
        (SELECT B.USE_YN FROM SHC_REC_MAIN B WHERE B.L_CODE = A.L_CODE) AS MAIN_USE_YN
        FROM SHC_APPROVE A
        WHERE 1=1
        AND USE_YN = 'Y'
        ) A
        WHERE 1=1
        AND A.MAIN_USE_YN = 'Y'
        <if test="lCodeNm != null and lCodeNm != ''">
            AND A.L_CODE_NM LIKE CONCAT('%', #{lCodeNm}, '%')
        </if>
        <if test="revwYn != null and revwYn != ''">
            AND A.REVW_YN = #{revwYn}
        </if>
        <if test="revw != null and revw != ''">
            AND A.REVW LIKE CONCAT('%', #{revw}, '%')
        </if>
        <if test="appr != null and appr != ''">
            AND A.APPR LIKE CONCAT('%', #{appr}, '%')
        </if>
    </select>

    <select id="gridPaging" parameterType="map" resultType="camelMap">
        /* [결재선 - 그리드 페이징] admin.approve.gridPaging */
        SELECT A.*
        FROM (
        SELECT
        A.SEQ, A.L_CODE, A.USE_YN, A.REVW_YN
        , COALESCE ((SELECT B.USER_NAME FROM SHC_USERS B WHERE B.USER_ID = A.REVW), '') AS REVW
        , (SELECT B.USER_NAME FROM SHC_USERS B WHERE B.USER_ID = A.APPR) AS APPR
        ,A.RMK, A.CREATE_ID, A.CREATE_DT, A.MODIFY_ID, A.MODIFY_DT,
        (SELECT B.L_CODE_NM FROM SHC_REC_MAIN B WHERE B.L_CODE = A.L_CODE) AS L_CODE_NM,
        (SELECT B.USE_YN FROM SHC_REC_MAIN B WHERE B.L_CODE = A.L_CODE) AS MAIN_USE_YN
        FROM SHC_APPROVE A
        WHERE 1=1
        AND USE_YN = 'Y'
        ) A
        WHERE 1=1
        AND A.MAIN_USE_YN = 'Y'
        <if test="lCodeNm != null and lCodeNm != ''">
            AND A.L_CODE_NM LIKE CONCAT('%', #{lCodeNm}, '%')
        </if>
        <if test="revwYn != null and revwYn != ''">
            AND A.REVW_YN = #{revwYn}
        </if>
        <if test="revw != null and revw != ''">
            AND A.REVW LIKE CONCAT('%', #{revw}, '%')
        </if>
        <if test="appr != null and appr != ''">
            AND A.APPR LIKE CONCAT('%', #{appr}, '%')
        </if>
        ORDER BY A.CREATE_DT, L_CODE DESC
        LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="getApproveInfo" parameterType="map" resultType="camelMap">
        SELECT
            A.SEQ, A.L_CODE, A.USE_YN, A.REVW_YN, A.REVW, A.APPR, A.RMK, A.CREATE_ID
             , COALESCE ((SELECT B.USER_NAME FROM SHC_USERS B WHERE B.USER_ID = A.REVW), null) AS REVW_NAME
             , (SELECT B.USER_NAME FROM SHC_USERS B WHERE B.USER_ID = A.APPR) AS APPR_NAME
        FROM SHC_APPROVE A
        WHERE 1=1
          AND A.SEQ = #{seq}
    </select>

    <select id="selectLcodeList" parameterType="map" resultType="camelMap">
        /* [결재선 - 대분류 코드 가져오기] admin.approve.selectLcodeList */
        SELECT A.*
        FROM (
        <if test="seq != null and seq != '' and seq != undefined">
            SELECT A.L_CODE, A.L_CODE_NM
            FROM SHC_REC_MAIN A
            INNER JOIN
            SHC_APPROVE B
            ON A.L_CODE = B.L_CODE
            WHERE 1=1
            AND A.USE_YN = 'Y'
            AND B.SEQ = #{seq}
            UNION
        </if>
        SELECT A.L_CODE, A.L_CODE_NM
        FROM SHC_REC_MAIN A
        LEFT JOIN
        SHC_APPROVE B
        ON A.L_CODE = B.L_CODE
        AND A.APPR_YN = 'Y'
        WHERE 1=1
        AND A.USE_YN = 'Y'
        AND B.L_CODE IS NULL
        AND A.L_CODE NOT LIKE 'S%'
        AND A.L_CODE != 'P0021'
        ) A
        ORDER BY A.L_CODE ASC
    </select>

    <select id="selectUserList" parameterType="map" resultType="camelMap">
        /* [결재선 - 유저 정보 가져오기] admin.approve.selectUserList */
        SELECT
            A.USER_ID,
            A.USER_NAME,
            A.AUTH_CODE,
            (SELECT CODE_NM FROM SHC_COMM_CODE B WHERE B.CODE_KIND = 'AUTHCD' AND B.CODE = A.AUTH_CODE) AS AUTH_NM,
            PHONE_NUMBER,
            EMAIL,
            RMK
        FROM SHC_USERS A
        WHERE 1=1
          AND A.USE_YN = 'Y'
        ORDER BY CREATE_DT DESC
            LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="selectUserListCnt" parameterType="map" resultType="camelMap">
        /* [결재선 - 유저 정보 가져오기 카운트] admin.approve.selectUserListCnt */
        SELECT COUNT(*) AS CNT
        FROM SHC_USERS A
        WHERE 1=1
          AND A.USE_YN = 'Y'
    </select>

    <insert id="insertApprove" parameterType="map">
        /* [결재선 - 등록 입력하기] admin.approve.insertApprove */
        INSERT INTO SHC_APPROVE
            (L_CODE, USE_YN, REVW_YN, REVW, APPR, RMK, CREATE_ID, CREATE_DT)
        VALUES
            (#{lCode}, 'Y', #{revwYn}, #{revw}, #{appr}, #{rmk}, #{userId}, STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s'))
    </insert>

    <update id="updateApprove" parameterType="map">
        /* [결재선 - 수정 입력하기] admin.approve.updateApprove */
        UPDATE SHC_APPROVE SET L_CODE = #{lCode}, REVW_YN = #{revwYn}, REVW = #{revw}, APPR = #{appr}, rmk = #{rmk}, MODIFY_ID = #{userId}, MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        WHERE SEQ = #{seq}
    </update>

    <delete id="deleteApprove" parameterType="map">
        /* [결재선 - 삭제 하기] admin.approve.deleteApprove */
        DELETE FROM SHC_APPROVE WHERE SEQ = #{seq}
    </delete>

    <select id="checkAlreadyInList" parameterType="map" resultType="camelMap">
        /* [결재선 - 선택한 일지 코드 카운드 갯수 세기] admin.approve.checkAlreadyInList */
        SELECT COUNT(*) AS CNT
        FROM SHC_APPR_LIST
        WHERE REC_NO LIKE CONCAT(#{lCode}, '%')
          AND NOW_APPR_STATUS != '200'
    </select>

    <select id="getMainInfo" parameterType="map" resultType="camelMap">
        /* [결재선 - 선택된 코드 정보 가져오기] admin.approve.getMainInfo */
        SELECT L_CODE, L_CODE_NM
        FROM SHC_REC_MAIN
        WHERE 1=1
          AND USE_YN = 'Y'
          AND L_CODE = #{lCode}
    </select>
</mapper>
