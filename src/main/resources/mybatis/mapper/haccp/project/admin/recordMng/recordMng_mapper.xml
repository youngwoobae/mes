<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="daedan.mes.haccp.project.admin.recordMng">

    <select id="gridPagingCnt" parameterType="map" resultType="camelMap">
        SELECT COUNT(*) AS CNT
        FROM SHC_REC_MAIN
        WHERE 1=1
        <if test="lCodeNm != null and lCodeNm != '' and lCodeNm != 'undefined'">
            AND L_CODE_NM LIKE CONCAT('%', #{lCodeNm}, '%')
        </if>
    </select>

    <select id="gridPaging" parameterType="map" resultType="camelMap">
        SELECT
        CASE SUBSTR(L_CODE,1,1)
        WHEN 'P' THEN '선행요건관리'
        WHEN 'C' THEN 'HACCP관리'
        ELSE ''
        END as GUBUN_NM,
        L_CODE,
        L_CODE_NM,
        BASIC_YN,
        ONLY_FILE_YN,
        USE_YN,
        APPR_YN,
        CYCLE_YN,
        DETAIL_CYCLE_YN,
        IMPRV_YN,
        DETAIL_IMPRV_YN,
        REF_COMM_CODE,
        MAKE_GUIDE,
        RMK,
        CREATE_ID,
        CREATE_DT
        FROM SHC_REC_MAIN
        WHERE 1=1
        AND L_CODE NOT IN ('S0010','S0020')
        <if test="lCodeNm != null and lCodeNm != '' and lCodeNm != 'undefined'">
            AND L_CODE_NM LIKE CONCAT('%', #{lCodeNm}, '%')
        </if>
        LIMIT #{perPage} OFFSET #{offset}
    </select>


    <select id="recodeDataList" parameterType="map" resultType="camelMap">
		SELECT  L_CODE,
				SEQ,
				M_CODE_KIND,
				M_CODE,
				(SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) M_CODE_NM,
				(SELECT CODE_DESC FROM SHC_COMM_CODE WHERE CODE_KIND = M_CODE_KIND AND CODE = M_CODE) M_CODE_DESC,
				S_CODE_KIND,
				S_CODE,
				(SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=S_CODE_KIND AND CODE = S_CODE) S_CODE_NM,
				D_CODE_KIND,
				D_CODE,
				D_CODE_NM,
				ORD_SEQ,
				MAIN_CONF,
				BASIC_YN,
				USE_YN,
				STD_VAL,
				STD_VAL1,
				STD_VAL2,
				STD_VAL3,
				STD_VAL4,
				RMK
			FROM SHC_REC_PRE
			WHERE 1=1
			AND L_CODE = #{lCode}
			ORDER BY ORD_SEQ
			LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="recodeDataCnt" parameterType="map" resultType="camelMap">

        SELECT COUNT(*) AS CNT
        FROM SHC_REC_PRE
        WHERE 1=1
        <!-- 		AND BASIC_YN='N' -->
        AND L_CODE = #{lCode}
    </select>


    <select id="selectRecodeInfo" parameterType="map" resultType="camelMap">
	    	SELECT
				CASE SUBSTR(L_CODE,1,1)
				WHEN 'P' THEN '선행요건관리'
				WHEN 'C' THEN 'HACCP관리'
				ELSE ''
				END as GUBUN_NM,
				L_CODE,
				L_CODE_NM,
				BASIC_YN,
				ONLY_FILE_YN,
				USE_YN,
				APPR_YN,
				CYCLE_YN,
				DETAIL_CYCLE_YN,
				IMPRV_YN,
				DETAIL_IMPRV_YN,
				REF_COMM_CODE,
				MAKE_GUIDE,
				RMK,
				CREATE_ID,
				CREATE_DT
			FROM SHC_REC_MAIN
			WHERE 1=1
			AND L_CODE NOT IN ('S0010','S0020')
			AND L_CODE = #{lCode}
    </select>

    <select id="selectRecodeEdit" parameterType="map" resultType="camelMap">
	    	SELECT  L_CODE,
				SEQ,
				M_CODE_KIND,
				M_CODE,
				(SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=M_CODE_KIND AND CODE = M_CODE) M_CODE_NM,
				(SELECT CODE_DESC FROM SHC_COMM_CODE WHERE CODE_KIND = M_CODE_KIND AND CODE = M_CODE) M_CODE_DESC,
				S_CODE_KIND,
				S_CODE,
				(SELECT CODE_NM FROM SHC_COMM_CODE A WHERE CODE_KIND=S_CODE_KIND AND CODE = S_CODE) S_CODE_NM,
				D_CODE_KIND,
				D_CODE,
				D_CODE_NM,
				ORD_SEQ,
				MAIN_CONF,
				BASIC_YN,
				USE_YN,
				STD_VAL,
				STD_VAL1,
				STD_VAL2,
				STD_VAL3,
				STD_VAL4,
				RMK
			FROM SHC_REC_PRE
			WHERE 1=1
			AND M_CODE_KIND = #{commCode}
			AND L_CODE = #{lCode}
			AND M_CODE = #{mCode}
			AND SEQ = #{seq}
    </select>


    <insert id="insertCodeAdd" parameterType="map">
		INSERT INTO SHC_COMM_CODE
			(
				CODE_KIND,
				CODE_KIND_NM,
				CODE,
				CODE_NM,
				CODE_DESC,
				USE_YN,
				BASIC_YN,
				ORD_SEQ,
				RMK,
				CREATE_ID,
				CREATE_DT
			)VALUES(
				#{commCode},
				( SELECT DISTINCT B.CODE_KIND_NM FROM SHC_COMM_CODE B WHERE B.CODE_KIND =#{commCode} ),
				( SELECT DISTINCT concat(#{commCode},COUNT(*)+1) FROM SHC_COMM_CODE C WHERE C.CODE_KIND = #{commCode} ),
				#{codeNm2},
				#{codeDesc},
				'Y',
				'N',
				(SELECT COUNT(*)+1 FROM SHC_COMM_CODE E WHERE E.CODE_KIND =#{commCode}),
				'1',
				#{userId},
				STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			)
	</insert>

    <insert id="insertRecPreInfo" parameterType="map">
	/* 선행일지 설정 insert  recodeMng.insertRecPreInfo */
		INSERT INTO SHC_REC_PRE
			(
				L_CODE,
				SEQ,
				M_CODE_KIND,
				M_CODE,
				S_CODE_KIND,
				S_CODE,
				D_CODE_KIND,
				D_CODE,
				D_CODE_NM,
				ORD_SEQ,
				MAIN_CONF,
				BASIC_YN,
				USE_YN,
				STD_VAL,
				STD_VAL1,
				STD_VAL2,
				STD_VAL3,
				STD_VAL4,
				RMK,
				CREATE_ID,
				CREATE_DT
			)VALUES(
				#{lCode},
				( SELECT COALESCE (MAX(A.SEQ),0)+1 FROM SHC_REC_PRE A WHERE A.L_CODE =#{lCode} ),
				#{commCode},
				#{mCode},
				#{sCodeKind},
				#{sCode},
				#{dCodeKind},
				#{dCode},
				#{dCodeNm},
				#{ordSeq},
				#{mainConf},
				'N',
				#{useYn},
				#{stdVal},
				#{stdVal1},
				#{stdVal2},
				#{stdVal3},
				#{stdVal4},
				#{rmk},
				#{userId},
				STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			)
	</insert>

    <select id="selectLcodeList" parameterType="map" resultType="camelMap">
        SELECT CODE_KIND,
        CODE_KIND_NM,
        CODE,
        CODE_NM,
        CODE_DESC,
        USE_YN,
        BASIC_YN,
        ORD_SEQ,
        RMK,
        CREATE_ID,
        CREATE_DT
        FROM SHC_COMM_CODE
        WHERE CODE_KIND = #{commCode}
        AND CODE NOT IN (SELECT M_CODE FROM SHC_REC_PRE WHERE M_CODE_KIND = CODE_KIND AND M_CODE = CODE)
        <if test="commCode != 'VERFCD' ">
            AND BASIC_YN='N'
        </if>
        <if test="mCode2 != null and mCode2 != undefined and mCode2 != ''">
            AND CODE = #{mCode2}
        </if>
    </select>

    <select id="selectLcodeList2" parameterType="map" resultType="camelMap">
    	SELECT CODE_KIND,
				CODE_KIND_NM,
				CODE,
				CODE_NM,
				CODE_DESC,
				USE_YN,
				BASIC_YN,
				ORD_SEQ,
				RMK,
				CREATE_ID,
				CREATE_DT
				FROM SHC_COMM_CODE
				WHERE CODE_KIND = #{commCode}
    </select>

    <update id="updateRecPreInfo" parameterType="map">
    /* 선행일지 설정 update  recodeMng.updateRecPreInfo */
 	    UPDATE SHC_REC_PRE
			SET
				S_CODE_KIND = #{sCodeKind},
				S_CODE = #{sCode},
				D_CODE_KIND = #{dCodeKind},
				D_CODE = #{dCode},
				D_CODE_NM = #{dCodeNm},
				ORD_SEQ = #{ordSeq},
				MAIN_CONF = #{mainConf},
				USE_YN = #{useYn},
				STD_VAL = #{stdVal},
				STD_VAL1 = #{stdVal1},
				STD_VAL2 = #{stdVal2},
				STD_VAL3 = #{stdVal3},
				STD_VAL4 = #{stdVal4},
				RMK= #{rmk},
				MODIFY_ID = #{userId},
				MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			WHERE 1=1
				AND L_CODE = #{lCode}
				AND SEQ = #{seq}
				AND M_CODE = #{mCode}
	</update>

    <update id="updateMainUseYn" parameterType="map">
 	    UPDATE SHC_REC_MAIN
			SET
				USE_YN = #{useYn},
				MODIFY_ID = #{userId},
				MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			WHERE 1=1
				AND L_CODE = #{lCode}
	</update>

    <update id="updateMenuUseYn" parameterType="map">
        UPDATE SHC_MENUS
            SET
                USE_YN = #{useYn},
                MODIFY_ID = #{userId},
                MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
            WHERE 1=1
                AND L_CODE = #{lCode}
    </update>

    <delete id="deletePreData" parameterType="map">
		/* 선행일지 설정 삭제  recodeMng.deletePreData */
    	DELETE FROM SHC_REC_PRE WHERE L_CODE = #{lCode} AND M_CODE = #{mCode} AND SEQ = #{seq}
    </delete>

    <delete id="deleteCcpData" parameterType="map">
    	DELETE FROM SHC_REC_CCP WHERE L_CODE = #{lCode} AND M_CODE = #{mCode} AND SEQ = #{seq}
    </delete>

    <select id="countLmtStd" parameterType="map" resultType="camelMap">
		/* 한계기준코드 최대값  recodeMng.countLmtStd */
        SELECT cast(COALESCE (MAX(SUBSTR(LMT_STD_CODE,2)),0)+1 as unsigned) AS CNT
        FROM SHC_CCP_LMT_STD
        WHERE 1=1
    </select>

    <insert id="insertLmtStdAdd" parameterType="map">
        /* 한계기준 insert recodeMng.insertLmtStdAdd */
        INSERT INTO SHC_CCP_LMT_STD
        (
        LMT_STD_CODE,
        LMT_STD_NM,
        VERF_TYPE_CODE_KIND,
        VERF_TYPE_CODE,
        ORD_SEQ,
        CYCLE,
        BREAK_RCV_TIME,
        <if test="prcTime != null and prcTime !=''">
            PRC_TIME,
        </if>
        USE_YN,
        RMK,
        CREATE_ID,
        CREATE_DT
        )VALUES(
        concat('L',#{lmtStdCode}),
        #{lmtStdNm},
        'VERFCD',
        #{verfCd},
        '1',
        #{cycle},
        #{breakRcvTime},
        <if test="prcTime != null and prcTime !=''">
            #{prcTime},
        </if>
        'Y',
        #{rmk},
        #{userId},
        STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        )
    </insert>

    <insert id="insertLmtItemAdd" parameterType="map">
		INSERT INTO SHC_CCP_LMT_ITEM
			(
				LMT_STD_CODE,
				LMT_ITEM_CODE_KIND,
				LMT_ITEM_CODE,
				LMT_STD_VAL,
				LMT_MIN_VAL,
				LMT_MAX_VAL,
				LMT_ITEM_UNIT,
				RMK,
				CREATE_ID,
				CREATE_DT
			)VALUES(
				#{lmtStdCode},
				'LMTITM',
				#{lmtItemCode},
				#{lmtStdVal},
				#{lmtMinVal},
				#{lmtMaxVal},
				#{itemUnit},
				#{rmk},
				#{userId},
				STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			)
	</insert>

    <select id="selectMaxLmtCode" parameterType="map" resultType="camelMap">
	    	select MAX(LMT_STD_CODE) AS LMT_STD_CODE from SHC_CCP_LMT_STD
    </select>

    <select id="selectLmtList" parameterType="map" resultType="camelMap">
        SELECT  LMT_STD_CODE,
        LMT_STD_NM,
        VERF_TYPE_CODE_KIND,
        VERF_TYPE_CODE,
        (SELECT CODE_NM FROM SHC_COMM_CODE WHERE CODE_KIND = 'VERFCD' AND CODE = VERF_TYPE_CODE) AS VERF_TYPE_CODE_NM,
        ORD_SEQ,
        CYCLE,
        BREAK_RCV_TIME,
        PRC_TIME,
        USE_YN
        FROM SHC_CCP_LMT_STD
        WHERE 1=1
        <if test="lCode != ''">
            <choose>
                <when test="lCode == 'C0010'">
                    AND SUBSTR(VERF_TYPE_CODE,1,1) = 'H'
                </when>
                <when test="lCode == 'C0020'">
                    AND SUBSTR(VERF_TYPE_CODE,1,1) = 'C'
                </when>
                <when test="lCode == 'C0030'">
                    AND SUBSTR(VERF_TYPE_CODE,1,1) = 'D'
                </when>
            </choose>
        </if>
        AND USE_YN = 'Y'
    </select>

    <select id="selectLmtStdInfo" parameterType="map" resultType="camelMap">
			SELECT LMT_STD_CODE,
				LMT_STD_NM,
				VERF_TYPE_CODE_KIND,
				VERF_TYPE_CODE,
				(SELECT CODE_NM FROM SHC_COMM_CODE WHERE CODE_KIND = 'VERFCD' AND CODE = VERF_TYPE_CODE)AS VERF_TYPE_CODE_NM,
				ORD_SEQ,
				CYCLE,
				BREAK_RCV_TIME,
				PRC_TIME,
				USE_YN
			FROM SHC_CCP_LMT_STD
			WHERE LMT_STD_CODE = #{lmtStdCode}
    </select>

    <select id="selectLmtItemList" parameterType="map" resultType="camelMap">
			SELECT LMT_STD_CODE,
					LMT_ITEM_CODE_KIND,
					LMT_ITEM_CODE,
					(SELECT CODE_NM FROM SHC_COMM_CODE WHERE CODE_KIND = 'LMTITM' AND CODE = LMT_ITEM_CODE) AS LMT_ITEM_CODE_NM,
					LMT_ITEM_UNIT,
					(SELECT CODE_NM FROM SHC_COMM_CODE WHERE CODE = LMT_ITEM_UNIT) AS ITEM_UNIT_NM,
					LMT_STD_VAL,
					LMT_MIN_VAL,
					LMT_MAX_VAL,
					RMK,
					CREATE_ID,
					CREATE_DT
				from SHC_CCP_LMT_ITEM
				where LMT_STD_CODE =#{lmtStdCode}
    </select>


    <insert id="insertRecCcp" parameterType="map">
		INSERT INTO SHC_REC_CCP
				(
					L_CODE,
					M_CODE_KIND,
					M_CODE,
					LMT_STD_CHG_YN,
					LMT_STD_CODE,
					ORD_SEQ,
					USE_YN,
					MAIN_CONF,
					RMK,
					CREATE_ID,
					CREATE_DT
				)VALUES(
					#{lCode},
					#{commCode},
					#{mCode},
					'N',
					#{codeDesc},
					( SELECT COALESCE (MAX(C.ORD_SEQ),0)+1 FROM SHC_REC_CCP C WHERE C.M_CODE_KIND =#{commCode} ),
					'Y',
					#{mainConf},
					#{rmk},
					#{userId},
					STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
				)
	</insert>

    <select id="recodeCcpDataList_old" parameterType="map" resultType="camelMap">
        SELECT  A.L_CODE,
        A.M_CODE,
        A.SENSOR_ID,
        A.SENSOR_NM,
        B.M_CODE_KIND,
        B.M_CODE,
        (SELECT LMT_STD_NM FROM SHC_CCP_LMT_STD WHERE LMT_STD_CODE = B.LMT_STD_CODE)
        AS LMT_STD_NM,
        B.LMT_STD_CHG_YN,
        B.LMT_STD_CODE,
        B.ORD_SEQ,
        B.USE_YN
        FROM SHC_SENSOR A
        LEFT JOIN SHC_REC_CCP B
        ON B.M_CODE = A.M_CODE AND B.L_CODE = A.L_CODE
        WHERE 1=1
        AND A.L_CODE = #{lCode}
        <!-- 			AND BASIC_YN='N' -->
        LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="recodeCcpDataList" parameterType="map" resultType="camelMap">
        SELECT ROW_NUMBER() OVER(ORDER BY A.M_CODE) ORD_SEQ,
        A.L_CODE,
        A.M_CODE,
        A.M_CODE_NM as CODE_NM,
        (SELECT LMT_STD_NM FROM SHC_CCP_LMT_STD WHERE LMT_STD_CODE = B.LMT_STD_CODE)
        AS LMT_STD_NM,
        B.LMT_STD_CHG_YN,
        B.LMT_STD_CODE,
		COALESCE (B.USE_YN,'N') USE_YN
        FROM SHC_CCP_EQUIP A
        LEFT JOIN SHC_REC_CCP B
        ON B.M_CODE = A.M_CODE AND B.L_CODE = A.L_CODE
        WHERE 1=1
        AND A.L_CODE = #{lCode}
        <!-- 			AND BASIC_YN='N' -->
        LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="recodeCcpDataCnt" parameterType="map" resultType="camelMap">
        SELECT COUNT(*) AS CNT
        FROM SHC_REC_CCP
        WHERE 1=1
        <!-- 		AND BASIC_YN='N' -->
        AND L_CODE = #{lCode}
    </select>

    <select id="selectCcpRecodeEdit" parameterType="map" resultType="camelMap">
	    	SELECT  A.L_CODE,
					B.LMT_STD_NM,
					B.VERF_TYPE_CODE_KIND,
					B.VERF_TYPE_CODE,
					B.ORD_SEQ,
					B.CYCLE,
					B.BREAK_RCV_TIME,
					B.PRC_TIME,
					A.LMT_STD_CHG_YN,
					A.LMT_STD_CODE,
					A.ORD_SEQ,
					A.USE_YN,
					A.M_CODE_KIND,
					A.M_CODE,
					(SELECT M_CODE_NM FROM SHC_CCP_EQUIP WHERE M_CODE = A.M_CODE) AS CODE_NM
			FROM SHC_REC_CCP A
			LEFT JOIN SHC_CCP_LMT_STD B
				ON B.LMT_STD_CODE = A.LMT_STD_CODE
			WHERE 1=1
			AND A.LMT_STD_CODE = #{lmtStdCode}
			AND A.M_CODE = #{mCode}
    </select>

    <update id="updateRecCcp" parameterType="map">
 	   UPDATE SHC_REC_CCP
			SET
				LMT_STD_CHG_YN = 'Y',
				LMT_STD_CODE = #{codeDesc},
				USE_YN = #{useYn},
				MODIFY_ID = #{userId},
				MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			WHERE 1=1
				AND L_CODE = #{lCode}
				AND M_CODE = #{mCode}
	</update>

    <!-- 한계기준 입력단위 코드 조회 -->
    <select id="selectUnitList" parameterType="map" resultType="camelMap">
        SELECT CODE, CODE_NM
        FROM SHC_COMM_CODE
        WHERE CODE_KIND = #{itemUnit}<!-- 온도 -->
    </select>

    <!-- 한계기준명 중복체크 -->
    <select id="checkLmtNm" parameterType="map" resultType="camelMap">
    	SELECT COUNT(*) AS CNT FROM SHC_CCP_LMT_STD
			WHERE 1=1
			AND REPLACE(LMT_STD_NM,' ','') = REPLACE(#{lmtStdNm},' ','')
    </select>

    <!-- 공통코드명 중복체크 -->
    <select id="checkCodeNm" parameterType="map" resultType="camelMap">
    	SELECT COUNT(*) AS CNT FROM SHC_COMM_CODE
			WHERE CODE_KIND = #{commCode2}
			AND REPLACE(CODE_NM,' ','') = REPLACE(#{codeNm2},' ','')
    </select>

    <!-- 한계기준 목록 -->
    <select id="lmtGridPagingCnt" parameterType="map" resultType="camelMap">
        /* 한계기준 갯수  recodeMng.lmtGridPagingCnt */
        SELECT COUNT(*) AS CNT
        FROM SHC_CCP_LMT_STD
        WHERE USE_YN = 'Y'
        <if test="lmtStdNm != null and lmtStdNm != '' and lmtStdNm != 'undefined'">
            AND LMT_STD_NM LIKE CONCAT('%', #{lmtStdNm}, '%')
        </if>
    </select>

    <select id="lmtGridPaging" parameterType="map" resultType="camelMap">
        /* 한계기준 목록  recodeMng.lmtGridPaging */
        SELECT A.* FROM
        (SELECT ROW_NUMBER () OVER (ORDER BY LMT_STD_CODE) AS NUM,
        LMT_STD_CODE,
        LMT_STD_NM,
        VERF_TYPE_CODE_KIND,
        VERF_TYPE_CODE,
        (SELECT CODE_NM FROM SHC_COMM_CODE WHERE CODE_KIND = 'VERFCD' AND CODE = VERF_TYPE_CODE) AS VERF_TYPE_CODE_NM,
        ORD_SEQ,
        CYCLE,
        BREAK_RCV_TIME,
        PRC_TIME,
        USE_YN
        FROM SHC_CCP_LMT_STD
        WHERE USE_YN = 'Y'
        <if test="lmtStdNm != null and lmtStdNm != '' and lmtStdNm != 'undefined'">
            AND LMT_STD_NM LIKE CONCAT('%', #{lmtStdNm}, '%')
        </if>
        ORDER BY LMT_STD_CODE) A
        LIMIT #{perPage} OFFSET #{offset}
    </select>

    <select id="selectRecCcpUseYn" parameterType="map" resultType="camelMap">
        /* 한계기준 삭제 전 ccp 등록여부 조회 recodeMng.selectRecCcpUseYn */
        SELECT
            CASE WHEN COUNT(*) = 0
                 THEN 'N'
                 ELSE 'Y'
            END AS CCP_USE_YN
        FROM SHC_REC_CCP
        WHERE LMT_STD_CODE = #{lmtStdCode}
    </select>

    <select id="selectRecCcpUseList" parameterType="map" resultType="camelMap">
        SELECT
                A.L_CODE,
                A.M_CODE,
                A.M_CODE_NM as CODE_NM
        FROM SHC_CCP_EQUIP A
        LEFT JOIN SHC_REC_CCP B
            ON B.M_CODE = A.M_CODE
            AND B.L_CODE = A.L_CODE
        WHERE B.LMT_STD_CODE = #{lmtStdCode}
    </select>

    <update id="deleteLmtStd" parameterType="map">
        /* 한계기준 삭제  recodeMng.deleteLmtStd */
        <!-- DELETE FROM SHC_CCP_LMT_STD WHERE LMT_STD_CODE = #{lmtStdCode} -->
        UPDATE SHC_CCP_LMT_STD
        SET USE_YN = 'N',
        MODIFY_ID = #{userId},
        MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
        WHERE LMT_STD_CODE = #{lmtStdCode}
    </update>

    <!-- <update id="deleteLmtItem" parameterType="map">
		/* 한계기준 삭제  recodeMng.deleteLmtItem  사용하지 않음*/
    	DELETE FROM SHC_CCP_LMT_ITEM WHERE LMT_STD_CODE = #{lmtStdCode}
    </update> -->

    <update id="updateLmtStd" parameterType="map">
   	 /* 한계기준 수정  recodeMng.updateLmtStd */
 	   UPDATE SHC_CCP_LMT_STD
			SET
				CYCLE = #{cycle},
				BREAK_RCV_TIME = #{breakRcvTime},
				PRC_TIME = #{prcTime},
				USE_YN = #{useYn},
				MODIFY_ID = #{userId},
				MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			WHERE 1=1
				AND LMT_STD_CODE = #{lmtStdCode}
	</update>

    <update id="updateLmtItem" parameterType="map">
	 /* 한계기준item 수정  recodeMng.updateLmtItem */
 	   UPDATE SHC_CCP_LMT_ITEM
			SET
				LMT_ITEM_UNIT = #{itemUnit},
				LMT_MIN_VAL = #{lmtMinVal},
				LMT_MAX_VAL = #{lmtMaxVal},
				MODIFY_ID = #{userId},
				MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
			WHERE 1=1
				AND LMT_STD_CODE = #{lmtStdCode}
				AND LMT_ITEM_CODE = #{lmtItemCode}
	</update>

    <update id="updateOrdSeq" parameterType="map">
        /* 정렬순서 수정  recodeMng.updateOrdSeq */
        UPDATE SHC_REC_PRE
        SET ORD_SEQ = ORD_SEQ+1
        WHERE L_CODE = #{lCode}
        AND ORD_SEQ >= #{ordSeq}
        <if test="oldOrdSeq != null and oldOrdSeq != undefined and oldOrdSeq != ''">
            AND ORD_SEQ BETWEEN #{ordSeq} AND #{oldOrdSeq}-1
        </if>
    </update>

    <update id="updateOrdSeq2" parameterType="map">
   	 /* 정렬순서 수정  recodeMng.updateOrdSeq2 */
	 	  UPDATE SHC_REC_PRE
			SET ORD_SEQ = ORD_SEQ-1
			WHERE L_CODE = #{lCode}
		    AND ORD_SEQ BETWEEN #{oldOrdSeq}+1 AND #{ordSeq}
	</update>

    <!-- 해충관리 트랩정보 -->
    <select id="selectTrapdfInfo" parameterType="map" resultType="camelMap">
        /* 해충관리 트랩정보  recodeMng.selectTrapdfInfo */
        SELECT * FROM SHC_COMM_CODE WHERE CODE_KIND='TRAPDF'
    </select>

    <update id="updateTrapdfInfo" parameterType="map">
     /* 해충관리 트랩정보 수정 recodeMng."updateTrapdfInfo" */
          UPDATE SHC_COMM_CODE
          SET  CODE_DESC = #{trapdf}
	          ,MODIFY_ID = #{userId}
	          ,MODIFY_DT = STR_TO_DATE(NOW(), '%Y-%m-%d %H:%i:%s')
          WHERE CODE_KIND='TRAPDF'
    </update>

</mapper>
